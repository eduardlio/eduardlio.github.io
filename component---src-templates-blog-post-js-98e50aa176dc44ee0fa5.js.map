{"version":3,"sources":["webpack:///./src/components/listlink.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/blog-post.js","webpack:///./src/components/blogComments.js"],"names":["props","style","textDecoration","display","marginRight","to","color","children","Header","siteTitle","marginBottom","background","margin","maxWidth","padding","defaultProps","Layout","data","site","siteMetadata","title","Date","getFullYear","href","BlogPost","post","markdownRemark","fields","slug","split","className","frontmatter","date","dangerouslySetInnerHTML","__html","html","query"],"mappings":"wJAEe,WAAAA,GAAK,OACnB,kBAAIC,MAAO,CACVC,eAAgB,OAChBC,QAAS,eACTC,YAAa,WAEb,YAAC,OAAD,CAAMC,GAAIL,EAAMK,GAAIJ,MAAO,CAC1BK,MAAM,UACHN,EAAMO,YCCNC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,sBACER,MAAO,CACLS,aAAa,UACbC,WAAW,YAGb,mBACEV,MAAO,CACLW,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,sBACE,YAAC,OAAD,CACET,GAAG,IACHJ,MAAO,CACLK,MAAM,QACNJ,eAAe,SAGhBO,IAML,uBACE,YAAC,EAAD,CAAUJ,GAAG,UAAb,aAURG,EAAOO,aAAe,CACpBN,UAAU,IAGGD,QCLAQ,IApCA,SAAC,GAAkB,IAAhBT,EAAe,EAAfA,SACVU,EAAI,OAUV,OACE,8BACE,YAAC,EAAD,CAAQR,UAAWQ,EAAKC,KAAKC,aAAaC,QAC1C,mBACEnB,MAAO,CACLW,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,wBAAOP,GACP,gCACK,IAAIc,MAAOC,cADhB,mBAGE,iBAAGC,KAAK,4BAAR,e,oXClBKC,UAbE,SAAC,GAAc,IACxBC,EADuB,EAAXR,KACAS,eACLD,EAAKE,OAAOC,KAAKC,MAAM,SAAS,GAC7C,OACE,YAAC,IAAD,KACE,mBAAKC,UAAU,YACb,kBAAI7B,MAAO,IAAKwB,EAAKM,YAAYX,OACjC,qBAAIK,EAAKM,YAAYC,MACrB,mBAAKC,wBAAyB,CAAEC,OAAQT,EAAKU,WCRrD,IDcaC,EAAK","file":"component---src-templates-blog-post-js-98e50aa176dc44ee0fa5.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nexport default props => (\r\n\t<li style={{\r\n\t\ttextDecoration: \"none\",\r\n\t\tdisplay: 'inline-block',\r\n\t\tmarginRight: '0.3rem'\r\n\t}}>\r\n\t\t<Link to={props.to} style={{\r\n\t\t\tcolor: `white`\r\n\t\t}}>{props.children}</Link>\r\n\t</li>\r\n)","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport ListLink from './listlink'\r\n\r\nconst whatDo = [\r\n  \"I smash my head against a keyboard for 8 hours a day\",\r\n  \"I blabber on about coffee and javascript\",\r\n  \"I constantly ask people if they want to go bouldering\",\r\n  \"I am a front end dev\",\r\n]\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      marginBottom: `1.45rem`,\r\n      background: `#DFAAD3`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `5.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n      {/* <h3 style={{ color: `white` }}>\r\n        {whatDo[Math.floor(Math.random() * 3)]}\r\n      </h3> */}\r\n      <nav>\r\n        <ListLink to=\"/about\">About</ListLink>\r\n      </nav>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0 1.0875rem 1.45rem`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport BlogComments from \"../components/blogComments\"\r\nimport \"./blog-post.css\"\r\n\r\nconst BlogPost = ({ data }) => {\r\n  const post = data.markdownRemark\r\n  const slug = post.fields.slug.split(\"/post\")[1]\r\n  return (\r\n    <Layout>\r\n      <div className=\"blogpost\">\r\n        <h1 style={{}}>{post.frontmatter.title}</h1>\r\n        <p>{post.frontmatter.date}</p>\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\nexport default BlogPost\r\nexport const query = graphql`\r\n  query BlogPostQuery($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"D MMMM YYYY\")\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n      html\r\n      id\r\n    }\r\n  }\r\n`\r\n","import React, { useState, useEffect } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport css from '@emotion/core'\r\n\r\nimport CommentInput from \"./blogCommentInput\"\r\n//const baseURL = \"http://localhost:5000/api\"\r\n\r\nconst baseURL = \"https://eduardlio-blog-comments.herokuapp.com/api\"\r\nconst BlogComments = props => {\r\n  const { slug } = props\r\n  const [comments, setComments] = useState([])\r\n  useEffect(() => {\r\n    fetch(`${baseURL}/comments${slug}`)\r\n      .then(i => i.json())\r\n      .then(fetched => {\r\n        setComments(\r\n          fetched.comments.sort((a, b) => {\r\n            if (a.updatedAt > b.updatedAt) {\r\n              return 1\r\n            } else {\r\n              return -1\r\n            }\r\n          })\r\n        )\r\n      })\r\n  }, [])\r\n  const onSubmit = comment => {\r\n    return fetch(`${baseURL}/comment`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: comment.name,\r\n        content: comment.content,\r\n        slug: slug.replace(/\\//g, \"\"),\r\n      }),\r\n    })\r\n      .then(i => i.json())\r\n      .then(done => {\r\n        setComments([...comments, done.comment])\r\n        return done\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n      <h2>Comments:</h2>\r\n      {comments.length > 0 ? (\r\n        comments.map(comment => {\r\n          return (\r\n            <div key={comment.id} style={{\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tflexDirection: 'column',\r\n\t\t\t\tmargin: '0.8rem auto',\r\n\t\t\t}}>\r\n              <p style={{margin: 0}}>{comment.content}</p>\r\n              <p style={{margin: 0}}>\r\n                by: {comment.name} at{\" \"}\r\n                {new Date(comment.updatedAt).toLocaleString(\"en-AU\")}\r\n              </p>\r\n            </div>\r\n          )\r\n        })\r\n      ) : (\r\n        <p>nothing here yet!</p>\r\n      )}\r\n      <CommentInput onSubmit={onSubmit} />\r\n    </>\r\n  )\r\n}\r\n\r\nBlogComments.propTypes = {\r\n  slug: PropTypes.string,\r\n}\r\nexport default BlogComments\r\n"],"sourceRoot":""}